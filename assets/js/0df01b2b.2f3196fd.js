"use strict";(self.webpackChunkworkshop=self.webpackChunkworkshop||[]).push([[2842],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=s(r),m=o,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[p]="string"==typeof e?e:o,i[1]=d;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4822:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:3},i="Internet Conneted Lights  (NodeRED & MQTT) \ud83d\udca1",d={unversionedId:"iot-basic-workshop/mqtt-and-nodered",id:"iot-basic-workshop/mqtt-and-nodered",title:"Internet Conneted Lights  (NodeRED & MQTT) \ud83d\udca1",description:"In this workshop we will going learn build a Internet Conncted Lights with the help of NodeRED and MQTT.",source:"@site/docs/iot-basic-workshop/mqtt-and-nodered.md",sourceDirName:"iot-basic-workshop",slug:"/iot-basic-workshop/mqtt-and-nodered",permalink:"/workshop.makergram.com/docs/iot-basic-workshop/mqtt-and-nodered",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/iot-basic-workshop/mqtt-and-nodered.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Voice Controlled Light \ud83d\udde3\ufe0f\ud83d\udca1",permalink:"/workshop.makergram.com/docs/iot-basic-workshop/voice-controlled-light"},next:{title:"TinyML Workshop \ud83e\udde0",permalink:"/workshop.makergram.com/docs/category/tinyml-workshop-"}},l={},s=[{value:"Required Hardware \ud83d\udee0",id:"required-hardware-",level:4},{value:"Required Softwares \ud83d\udc68\u200d\ud83d\udcbb",id:"required-softwares-",level:4},{value:"Architecture",id:"architecture",level:2},{value:"Step 1 : Connect NodeMCU and LED&#39;s",id:"step-1--connect-nodemcu-and-leds",level:2},{value:"Step 2: Install Arduino IDE and Add NodeMCU.",id:"step-2-install-arduino-ide-and-add-nodemcu",level:2},{value:"NodeMCU Board Definition",id:"nodemcu-board-definition",level:4}],c={toc:s};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"internet-conneted-lights--nodered--mqtt-"},"Internet Conneted Lights  (NodeRED & MQTT) \ud83d\udca1"),(0,o.kt)("p",null,"In this workshop we will going learn build a ",(0,o.kt)("strong",{parentName:"p"},"Internet Conncted Lights")," with the help of NodeRED and MQTT. "),(0,o.kt)("h4",{id:"required-hardware-"},"Required Hardware \ud83d\udee0"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"NodeMCU ESP8266 "),(0,o.kt)("li",{parentName:"ul"},"LED's"),(0,o.kt)("li",{parentName:"ul"},"Switch "),(0,o.kt)("li",{parentName:"ul"},"Raspberry Pi (Not mandatory)")),(0,o.kt)("h4",{id:"required-softwares-"},"Required Softwares \ud83d\udc68\u200d\ud83d\udcbb"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.arduino.cc/en/software"},"Arduino IDE")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nodered.org/"},"NodeRED")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://mosquitto.org/"},"Eclipse Mosquitto MQTT Broker "))),(0,o.kt)("h2",{id:"architecture"},"Architecture"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Architecture",src:r(9673).Z,width:"1167",height:"281"})),(0,o.kt)("h2",{id:"step-1--connect-nodemcu-and-leds"},"Step 1 : Connect NodeMCU and LED's"),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(4645).Z,width:"918",height:"636"})),(0,o.kt)("h2",{id:"step-2-install-arduino-ide-and-add-nodemcu"},"Step 2: Install Arduino IDE and Add NodeMCU."),(0,o.kt)("p",null,"You can download and Install Arduino IDE from here ",(0,o.kt)("a",{parentName:"p",href:"https://www.arduino.cc/en/Main/Software"},"Arduino IDE")," In default Arduino IDE only Support Native boards like UNO,Nano.. etc , so we need to install NodeMCU Board and MQTT Libraries ."),(0,o.kt)("h4",{id:"nodemcu-board-definition"},"NodeMCU Board Definition"),(0,o.kt)("p",null,"Open Arduino IDE and add additional Board URL File => Preference (Ctrl + Comma)"),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(2650).Z,width:"308",height:"406"})),(0,o.kt)("p",null,"In Additional Boards Manager, click add and paste the URL there ",(0,o.kt)("a",{parentName:"p",href:"http://arduino.esp8266.com/stable/package_esp8266com_index.json"},"http://arduino.esp8266.com/stable/package_esp8266com_index.json"),' And click "OK".'))}p.isMDXComponent=!0},2650:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/001-3da068716806fcbeb8cf8b489db8af90.jpg"},9673:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/architecture-786c055c50e61351a6ffdfa13b125fe2.png"},4645:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/led_connection_bb-127616518acd0eae8db123fea6a32670.png"}}]);